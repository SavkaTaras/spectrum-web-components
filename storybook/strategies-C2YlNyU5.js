import { c as conditionAttributeWithId } from './condition-attribute-with-id-Cnyhr7Mp.js';
import { r as randomID } from './random-id-BST1Puzz.js';
import { n as noop } from './AbstractOverlay-Brp4Of0B.js';
import { a as isIOS, i as isAndroid, c as isWebKit } from './platform-r3Lf9REX.js';

var InteractionTypes=(r=>(r.click="click",r.hover="hover",r.longpress="longpress",r))(InteractionTypes||{});const lastInteractionType=Symbol("lastInteractionType"),SAFARI_FOCUS_RING_CLASS="remove-focus-ring-safari-hack";class InteractionController{constructor(e,{overlay:t,isPersistent:r,handleOverlayReady:i}){this.target=e;this.isLazilyOpen=!1;this.isPersistent=!1;this.isPersistent=!!r,this.handleOverlayReady=i,this.isPersistent&&this.init(),this.overlay=t;}get activelyOpening(){return !1}get open(){var e,t;return (t=(e=this.overlay)==null?void 0:e.open)!=null?t:this.isLazilyOpen}set open(e){if(e!==this.open){if(this.isLazilyOpen=e,this.overlay){this.overlay.open=e,this.target[lastInteractionType]=this.type;return}e&&(customElements.whenDefined("sp-overlay").then(async()=>{const{Overlay:t}=await import('./Overlay-B1pWwvb1.js');this.overlay=new t,this.overlay.open=!0,this.target[lastInteractionType]=this.type;}),import('./sp-overlay-DukGW24v.js'));}}get overlay(){return this._overlay}set overlay(e){var t;e&&this.overlay!==e&&(this.overlay&&this.overlay.removeController(this),this._overlay=e,this.overlay.addController(this),this.initOverlay(),this.prepareDescription(this.target),(t=this.handleOverlayReady)==null||t.call(this,this.overlay));}prepareDescription(e){}releaseDescription(){}shouldCompleteOpen(){}init(){}initOverlay(){}abort(){var e;this.releaseDescription(),(e=this.abortController)==null||e.abort();}hostConnected(){this.init();}hostDisconnected(){this.isPersistent||this.abort();}}

const g=300;const LONGPRESS_INSTRUCTIONS={touch:"Double tap and long press for additional options",keyboard:"Press Space or Alt+Down Arrow for additional options",mouse:"Click and hold for additional options"};class LongpressController extends InteractionController{constructor(){super(...arguments);this.type=InteractionTypes.longpress;this.longpressState=null;this.releaseDescription=noop;this.handlePointerup=()=>{var e;clearTimeout(this.timeout),this.target&&(this.longpressState=((e=this.overlay)==null?void 0:e.state)==="opening"?"pressed":null,document.removeEventListener("pointerup",this.handlePointerup),document.removeEventListener("pointercancel",this.handlePointerup));};}get activelyOpening(){return this.longpressState==="opening"||this.longpressState==="pressed"}handleLongpress(){this.open=!0,this.longpressState=this.longpressState==="potential"?"opening":"pressed";}handlePointerdown(e){!this.target||e.button!==0||(this.longpressState="potential",document.addEventListener("pointerup",this.handlePointerup),document.addEventListener("pointercancel",this.handlePointerup),"holdAffordance"in this.target)||(this.timeout=setTimeout(()=>{this.target&&this.target.dispatchEvent(new CustomEvent("longpress",{bubbles:!0,composed:!0,detail:{source:"pointer"}}));},g));}handleKeydown(e){const{code:t,altKey:o}=e;o&&t==="ArrowDown"&&(e.stopPropagation(),e.stopImmediatePropagation());}handleKeyup(e){const{code:t,altKey:o}=e;if(t==="Space"||o&&t==="ArrowDown"){if(!this.target)return;e.stopPropagation(),this.target.dispatchEvent(new CustomEvent("longpress",{bubbles:!0,composed:!0,detail:{source:"keyboard"}})),setTimeout(()=>{this.longpressState=null;});}}prepareDescription(e){if(this.releaseDescription!==noop||!this.overlay.elements.length)return;const t=document.createElement("div");t.id=`longpress-describedby-descriptor-${randomID()}`;const o=isIOS()||isAndroid()?"touch":"keyboard";t.textContent=LONGPRESS_INSTRUCTIONS[o],t.slot="longpress-describedby-descriptor";const n=e.getRootNode(),s=this.overlay.getRootNode();n===s?this.overlay.append(t):(t.hidden=!("host"in n),e.insertAdjacentElement("afterend",t));const i=conditionAttributeWithId(e,"aria-describedby",[t.id]);this.releaseDescription=()=>{i(),t.remove(),this.releaseDescription=noop;};}shouldCompleteOpen(){this.longpressState=this.longpressState==="pressed"?null:this.longpressState;}init(){var t;(t=this.abortController)==null||t.abort(),this.abortController=new AbortController;const{signal:e}=this.abortController;this.target.addEventListener("longpress",()=>this.handleLongpress(),{signal:e}),this.target.addEventListener("pointerdown",o=>this.handlePointerdown(o),{signal:e}),this.prepareDescription(this.target),!this.target.holdAffordance&&(this.target.addEventListener("keydown",o=>this.handleKeydown(o),{signal:e}),this.target.addEventListener("keyup",o=>this.handleKeyup(o),{signal:e}));}}

class ClickController extends InteractionController{constructor(){super(...arguments);this.type=InteractionTypes.click;this.preventNextToggle=!1;}handleClick(){this.preventNextToggle||(this.open=!this.open),this.preventNextToggle=!1;}handlePointerdown(){this.preventNextToggle=this.open;}init(){var t;(t=this.abortController)==null||t.abort(),this.abortController=new AbortController;const{signal:e}=this.abortController;this.target.addEventListener("click",()=>this.handleClick(),{signal:e}),this.target.addEventListener("pointerdown",()=>this.handlePointerdown(),{signal:e});}}

const c=300;class HoverController extends InteractionController{constructor(){super(...arguments);this.type=InteractionTypes.hover;this.elementIds=[];this.focusedin=!1;this.pointerentered=!1;}handleKeyup(e){(e.code==="Tab"||e.code==="Escape")&&(this.open=!0,this.removeSafariFocusRingClass());}handleTargetFocusin(){if(this.target.matches(":focus-visible")){if(isWebKit()&&this.target[lastInteractionType]===InteractionTypes.click){this.target.classList.add(SAFARI_FOCUS_RING_CLASS);return}this.open=!0,this.focusedin=!0,this.removeSafariFocusRingClass();}}handleTargetFocusout(){this.removeSafariFocusRingClass(),this.focusedin=!1,!this.pointerentered&&(this.open=!1);}handleTargetPointerenter(){var e;this.hoverTimeout&&(clearTimeout(this.hoverTimeout),this.hoverTimeout=void 0),!((e=this.overlay)!=null&&e.disabled)&&(this.open=!0,this.pointerentered=!0);}handleTargetPointerleave(){this.doPointerleave();}handleHostPointerenter(){this.hoverTimeout&&(clearTimeout(this.hoverTimeout),this.hoverTimeout=void 0);}handleHostPointerleave(){this.doPointerleave();}prepareDescription(){if(!this.overlay.elements.length)return;const e=this.target.getRootNode(),t=this.overlay.elements[0].getRootNode(),r=this.overlay.getRootNode();e===r?this.prepareOverlayRelativeDescription():e===t&&this.prepareContentRelativeDescription();}prepareOverlayRelativeDescription(){const e=conditionAttributeWithId(this.target,"aria-describedby",[this.overlay.id]);this.releaseDescription=()=>{e(),this.releaseDescription=noop;};}prepareContentRelativeDescription(){const e=[],t=this.overlay.elements.map(i=>(e.push(i.id),i.id||(i.id=`${this.overlay.tagName.toLowerCase()}-helper-${randomID()}`),i.id));this.elementIds=e;const r=conditionAttributeWithId(this.target,"aria-describedby",t);this.releaseDescription=()=>{r(),this.overlay.elements.map((i,h)=>{i.id=this.elementIds[h];}),this.releaseDescription=noop;};}doPointerleave(){this.pointerentered=!1;const e=this.target;this.focusedin&&e.matches(":focus-visible")||(this.hoverTimeout=setTimeout(()=>{this.open=!1;},c));}init(){var t;(t=this.abortController)==null||t.abort(),this.abortController=new AbortController;const{signal:e}=this.abortController;this.target.addEventListener("keyup",r=>this.handleKeyup(r),{signal:e}),this.target.addEventListener("focusin",()=>this.handleTargetFocusin(),{signal:e}),this.target.addEventListener("focusout",()=>this.handleTargetFocusout(),{signal:e}),this.target.addEventListener("pointerenter",()=>this.handleTargetPointerenter(),{signal:e}),this.target.addEventListener("pointerleave",()=>this.handleTargetPointerleave(),{signal:e}),this.overlay&&this.initOverlay();}initOverlay(){if(!this.abortController)return;const{signal:e}=this.abortController;this.overlay.addEventListener("pointerenter",()=>this.handleHostPointerenter(),{signal:e}),this.overlay.addEventListener("pointerleave",()=>this.handleHostPointerleave(),{signal:e});}removeSafariFocusRingClass(){isWebKit()&&this.target.classList.contains(SAFARI_FOCUS_RING_CLASS)&&this.target.classList.remove(SAFARI_FOCUS_RING_CLASS);}}

const strategies={click:ClickController,longpress:LongpressController,hover:HoverController};

export { InteractionTypes as I, LONGPRESS_INSTRUCTIONS as L, strategies as s };
