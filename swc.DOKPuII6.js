import{c as e,a as t,r as i}from"./swc.BSE6YbTY.js";import"./swc.BfRajNoZ.js";import{i as s}from"./swc.CG3TZKt7.js";import{E as l,e as r}from"./swc.BlIgIdkB.js";import{S as a}from"./swc.CJQDnMeg.js";import{x as o,A as c}from"./swc.BY-CAm7w.js";import{n as m,S as n}from"./swc.sUndeUYd.js";import{i as d}from"./swc.DEkuF1Ug.js";import{d as p}from"./swc.JlveB6nj.js";const u=s`
    .spectrum-UIIcon-Asterisk75{--spectrum-icon-size:var(--spectrum-asterisk-icon-size-75)}.spectrum-UIIcon-Asterisk100{--spectrum-icon-size:var(--spectrum-asterisk-icon-size-100)}.spectrum-UIIcon-Asterisk200{--spectrum-icon-size:var(--spectrum-asterisk-icon-size-200)}.spectrum-UIIcon-Asterisk300{--spectrum-icon-size:var(--spectrum-asterisk-icon-size-300)}
`,b=s`
    :host{--spectrum-fieldlabel-min-height:var(--spectrum-component-height-75);--spectrum-fieldlabel-color:var(--spectrum-neutral-subdued-content-color-default);--spectrum-field-label-text-to-asterisk:var(--spectrum-field-label-text-to-asterisk-medium);--spectrum-fieldlabel-font-weight:var(--spectrum-regular-font-weight);--spectrum-fieldlabel-line-height:var(--spectrum-line-height-100);--spectrum-fieldlabel-line-height-cjk:var(--spectrum-cjk-line-height-100)}:host([size=s]){--spectrum-fieldlabel-min-height:var(--spectrum-component-height-75);--spectrum-fieldlabel-top-to-text:var(--spectrum-component-top-to-text-75);--spectrum-fieldlabel-bottom-to-text:var(--spectrum-component-bottom-to-text-75);--spectrum-fieldlabel-font-size:var(--spectrum-font-size-75);--spectrum-fieldlabel-side-margin-block-start:var(--spectrum-field-label-top-margin-small);--spectrum-fieldlabel-side-padding-right:var(--spectrum-spacing-100);--spectrum-field-label-text-to-asterisk:var(--spectrum-field-label-text-to-asterisk-small)}:host{--spectrum-fieldlabel-min-height:var(--spectrum-component-height-75);--spectrum-fieldlabel-top-to-text:var(--spectrum-component-top-to-text-75);--spectrum-fieldlabel-bottom-to-text:var(--spectrum-component-bottom-to-text-75);--spectrum-fieldlabel-font-size:var(--spectrum-font-size-75);--spectrum-fieldlabel-side-margin-block-start:var(--spectrum-field-label-top-margin-medium);--spectrum-fieldlabel-side-padding-right:var(--spectrum-spacing-200);--spectrum-field-label-text-to-asterisk:var(--spectrum-field-label-text-to-asterisk-medium)}:host([size=l]){--spectrum-fieldlabel-min-height:var(--spectrum-component-height-100);--spectrum-fieldlabel-top-to-text:var(--spectrum-component-top-to-text-100);--spectrum-fieldlabel-bottom-to-text:var(--spectrum-component-bottom-to-text-100);--spectrum-fieldlabel-font-size:var(--spectrum-font-size-100);--spectrum-fieldlabel-side-margin-block-start:var(--spectrum-field-label-top-margin-large);--spectrum-fieldlabel-side-padding-right:var(--spectrum-spacing-200);--spectrum-field-label-text-to-asterisk:var(--spectrum-field-label-text-to-asterisk-large)}:host([size=xl]){--spectrum-fieldlabel-min-height:var(--spectrum-component-height-200);--spectrum-fieldlabel-top-to-text:var(--spectrum-component-top-to-text-200);--spectrum-fieldlabel-bottom-to-text:var(--spectrum-component-bottom-to-text-200);--spectrum-fieldlabel-font-size:var(--spectrum-font-size-200);--spectrum-fieldlabel-side-margin-block-start:var(--spectrum-field-label-top-margin-extra-large);--spectrum-fieldlabel-side-padding-right:var(--spectrum-spacing-200);--spectrum-field-label-text-to-asterisk:var(--spectrum-field-label-text-to-asterisk-extra-large)}:host{box-sizing:border-box;min-block-size:var(--mod-fieldlabel-min-height,var(--spectrum-fieldlabel-min-height));padding-block:var(--mod-field-label-top-to-text,var(--spectrum-fieldlabel-top-to-text))var(--mod-field-label-bottom-to-text,var(--spectrum-fieldlabel-bottom-to-text));font-size:var(--mod-fieldlabel-font-size,var(--spectrum-fieldlabel-font-size));font-weight:var(--mod-fieldlabel-font-weight,var(--spectrum-fieldlabel-font-weight));line-height:var(--mod-fieldlabel-line-height,var(--spectrum-fieldlabel-line-height));-webkit-font-smoothing:subpixel-antialiased;-moz-osx-font-smoothing:auto;color:var(--spectrum-fieldlabel-color);padding-inline:0;display:block}:host(:lang(ja)),:host(:lang(zh)),:host(:lang(ko)){line-height:var(--mod-fieldlabel-line-height-cjk,var(--spectrum-fieldlabel-line-height-cjk))}.required-icon{margin-block:0;margin-inline:var(--mod-field-label-text-to-asterisk,var(--spectrum-field-label-text-to-asterisk))0;vertical-align:var(--mod-field-label-asterisk-vertical-align,baseline)}:host([side-aligned=start]),:host([side-aligned=end]){vertical-align:top;margin-block-start:var(--mod-fieldlabel-side-margin-block-start,var(--spectrum-fieldlabel-side-margin-block-start));margin-block-end:0;margin-inline-end:var(--mod-fieldlabel-side-padding-right,var(--spectrum-fieldlabel-side-padding-right));display:inline-block}:host([side-aligned=end]){text-align:end}:host([disabled]),:host([disabled]) .required-icon{color:var(--highcontrast-disabled-content-color,var(--mod-disabled-content-color,var(--spectrum-disabled-content-color)))}@media (forced-colors:active){:host{--highcontrast-disabled-content-color:GrayText}}label{display:inline-block}
`;var h=Object.defineProperty,f=Object.getOwnPropertyDescriptor,g=(e,t,i,s)=>{for(var l,r=s>1?void 0:s?f(t,i):t,a=e.length-1;a>=0;a--)(l=e[a])&&(r=(s?l(t,i,r):l(r))||r);return s&&r&&h(t,i,r),r};class v extends(a(n,{noDefaultSize:!0})){constructor(){super(...arguments),this.disabled=!1,this.id="",this.for="",this.required=!1,this.resolvedElement=new l(this)}static get styles(){return[b,u]}handleClick(e){if(!this.target||this.disabled||e.defaultPrevented)return;this.target.focus();const t=this.getRootNode(),i=this.target,s=i.getRootNode(),l=s.host;s===t&&i.forceFocusVisible?i.forceFocusVisible():l&&l.forceFocusVisible&&l.forceFocusVisible()}applyTargetLabel(i){if(this.target=i||this.target,this.target){const s=this.target.applyFocusElementLabel,l=this.target.focusElement||this.target,r=l.getRootNode();void 0!==s?s(this.labelText,this):r===this.getRootNode()?(i?e:t)(l,"aria-labelledby",[this.id]):i?l.setAttribute("aria-label",this.labelText):l.removeAttribute("aria-label")}}async manageTarget(){this.applyTargetLabel();const e=this.resolvedElement.element;e?(e.localName.search("-")>0&&await customElements.whenDefined(e.localName),void 0!==e.updateComplete&&await e.updateComplete,this.applyTargetLabel(e)):this.target=e}get labelText(){const e=this.slotEl.assignedNodes({flatten:!0});return e.length?e.map((e=>(e.textContent||"").trim())).join(" "):""}render(){return o`
            <label>
                <slot></slot>
                ${this.required?o`
                          <sp-icon-asterisk100
                              class="required-icon spectrum-UIIcon-Asterisk100"
                          ></sp-icon-asterisk100>
                      `:c}
            </label>
        `}firstUpdated(e){super.firstUpdated(e),this.addEventListener("click",this.handleClick)}willUpdate(e){this.hasAttribute("id")||this.setAttribute("id",`${this.tagName.toLowerCase()}-${i()}`),e.has("for")&&(this.resolvedElement.selector=this.for?`#${this.for}`:""),(e.has("id")||e.has(r))&&this.manageTarget()}}g([m({type:Boolean,reflect:!0})],v.prototype,"disabled",2),g([m({type:String})],v.prototype,"id",2),g([m({type:String})],v.prototype,"for",2),g([m({type:Boolean,reflect:!0})],v.prototype,"required",2),g([d("slot")],v.prototype,"slotEl",2),g([m({type:String,reflect:!0,attribute:"side-aligned"})],v.prototype,"sideAligned",2),p("sp-field-label",v);
//# sourceMappingURL=swc.Bc4H5H_2.js.map
